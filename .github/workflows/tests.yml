name: iOS Tests

on:
  push:
    branches: [ main, develop, fav-toggle ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Run Unit Tests
    runs-on: macos-14
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Select Xcode version
      run: sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer
      
    - name: Show Xcode version
      run: xcodebuild -version
      
    - name: Show available simulators
      run: xcrun simctl list devices available
      
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/Library/Developer/Xcode/DerivedData
          ~/.cache/CocoaPods
        key: ${{ runner.os }}-xcode-${{ hashFiles('**/Kuna.xcodeproj/project.pbxproj') }}
        restore-keys: |
          ${{ runner.os }}-xcode-
    
    - name: Build and test
      run: |
        xcodebuild \
          -project Kuna.xcodeproj \
          -scheme Kuna \
          -destination 'platform=iOS Simulator,name=iPhone 15 Pro,OS=17.2' \
          -enableCodeCoverage YES \
          -derivedDataPath DerivedData \
          clean build test \
          | xcpretty --report junit --output test-results.xml
      
    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results
        path: test-results.xml
        
    - name: Generate code coverage report
      run: |
        xcrun xccov view DerivedData/Logs/Test/*.xcresult --report --only-targets
        
    - name: Upload code coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        flags: unittests
        name: kuna-ios-tests
        fail_ci_if_error: false

  lint:
    name: SwiftLint
    runs-on: macos-14
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install SwiftLint
      run: brew install swiftlint
      
    - name: Run SwiftLint
      run: |
        swiftlint lint --reporter github-actions-logging
        
  build-variants:
    name: Test Build Variants
    runs-on: macos-14
    strategy:
      matrix:
        configuration: [Debug, Release]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Select Xcode version
      run: sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer
      
    - name: Build ${{ matrix.configuration }}
      run: |
        xcodebuild \
          -project Kuna.xcodeproj \
          -scheme Kuna \
          -configuration ${{ matrix.configuration }} \
          -destination 'platform=iOS Simulator,name=iPhone 15 Pro,OS=17.2' \
          -derivedDataPath DerivedData \
          build \
          | xcpretty
          
    - name: Archive build logs
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: build-logs-${{ matrix.configuration }}
        path: DerivedData/Logs/Build/*.xcactivitylog
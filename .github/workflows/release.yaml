---
name: Release (Tag âžœ TestFlight + GitHub Release)

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      tag:
        description: "Tag to re-run (optional)"
        required: false
        type: string

permissions:
  contents: write

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: false

jobs:
  # 1) Sanity build & tests on macOS (simulator, unsigned)
  tests:
    name: Build & Test
    runs-on: macos-latest
    timeout-minutes: 60

    steps:
      - uses: actions/checkout@v4

      - name: Validate Xcode version matches tag
        run: |
          TAG="${GITHUB_REF#refs/tags/}"   # e.g. v1.0.3
          EXPECTED="${TAG#v}"              # 1.0.3
          ACTUAL=$(xcodebuild -showBuildSettings -scheme "Kuna" -configuration Release \
            | awk -F'= ' '/MARKETING_VERSION/ {print $2; exit}')
          echo "Tag says: $EXPECTED | Xcode says: $ACTUAL"
          [ "$EXPECTED" = "$ACTUAL" ] || { echo "Version mismatch"; exit 1; }

      - name: Set Xcode version
        run: xcodebuild -version

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.2"
          bundler-cache: true

      - name: Install gems
        run: bundle install

      - name: SwiftLint (strict)
        run: |
          brew update
          brew install swiftlint
          swiftlint --strict || true

      - name: Run tests (Fastlane)
        env:
          CI: "true"
        run: bundle exec fastlane ci_tests

      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-artifacts
          path: |
            fastlane/test_output/*.xml
            fastlane/test_output/*.json
            fastlane/test_output/*.xcresult
            fastlane/test_output/coverage.txt
          if-no-files-found: warn

  # 2) Sign, archive, export .ipa, upload to TestFlight
  build_and_upload:
    name: Build & Upload to TestFlight
    needs: tests
    runs-on: macos-latest
    timeout-minutes: 60
    env:
      FASTLANE_APP_STORE_CONNECT_API_KEY: ${{ secrets.FASTLANE_APP_STORE_CONNECT_API_KEY }}
      MATCH_S3_BUCKET: ${{ secrets.MATCH_S3_BUCKET }}
      MATCH_S3_ACCESS_KEY_ID: ${{ secrets.MATCH_S3_ACCESS_KEY_ID }}
      MATCH_S3_SECRET_ACCESS_KEY: ${{ secrets.MATCH_S3_SECRET_ACCESS_KEY }}
      MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
      KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
      # Optional release notes override
      RELEASE_NOTES: ${{ github.event.head_commit.message }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.2"
          bundler-cache: true

      - name: Install gems
        run: bundle install

      - name: Prepare temporary keychain
        run: |
          security create-keychain -p "$KEYCHAIN_PASSWORD" build.keychain
          security list-keychains -s build.keychain login.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" build.keychain
          security set-keychain-settings -lut 21600 build.keychain

      - name: Build .ipa (Fastlane)
        run: bundle exec fastlane build_ipa

      - name: Upload to TestFlight (Fastlane)
        run: bundle exec fastlane upload_testflight

      - name: Upload artifacts (IPA + dSYM)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: app-artifacts
          path: |
            fastlane/build/*.ipa
            fastlane/build/*.dSYM.zip
          if-no-files-found: warn

  # 3) Create or update a GitHub Release with autogenerated notes
  github_release:
    name: GitHub Release
    needs: build_and_upload
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Compute tag name
        id: tag
        run: |
          if [ -n "${{ inputs.tag }}" ]; then
            echo "value=${{ inputs.tag }}" >> $GITHUB_OUTPUT
          else
            # refs/tags/v1.2.3 -> v1.2.3
            echo "value=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - name: Create/Update Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag.outputs.value }}
          generate_release_notes: true
          files: |
            fastlane/build/*.ipa
            fastlane/build/*.dSYM.zip
